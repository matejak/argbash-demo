#!/bin/bash

# Created by argbash-init v2.5.0
# ARG_POSITIONAL_SINGLE([version],[Argbash version to get],[2.5.0])
# ARG_HELP([Get Argbash local release from Github])
# ARGBASH_SET_DELIM([ ])
# ARG_OPTION_STACKING([none])
# ARG_RESTRICT_VALUES([none])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.5.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}


# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
_arg_version="2.5.0"
# THE DEFAULTS INITIALIZATION - OPTIONALS

print_help ()
{
	printf "%s\n" "Get Argbash local release from Github"
	printf 'Usage: %s [-h|--help] [<version>]\n' "$0"
	printf "\t%s\n" "<version>: Argbash version to get (default: '""2.5.0""')"
	printf "\t%s\n" "-h,--help: Prints help"
	echo
	echo 'Short options stacking mode is not supported.'
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-h|--help)
				print_help
				exit 0
				;;
			*)
				_positionals+=("$1")
				;;
		esac
		shift
	done
}


handle_passed_args_count ()
{
	test ${#_positionals[@]} -gt 1 && _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect between 0 and 1, but got ${#_positionals[@]} (the last one was: '${_positionals[*]: -1}')." 1
}

assign_positional_args ()
{
	_positional_names=('_arg_version' )

	for (( ii = 0; ii < ${#_positionals[@]}; ii++))
	do
		eval "${_positional_names[ii]}=\${_positionals[ii]}" || die "Error during argument parsing, possibly an Argbash bug." 1
	done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

set -e

file="${_arg_version}.tar.gz"

wget "https://github.com/matejak/argbash/archive/$file"
tar -xf "$file"
echo "Enjoy your argbash executable script at argbash-${_arg_version}/bin/argbash"

# ] <-- needed because of Argbash
